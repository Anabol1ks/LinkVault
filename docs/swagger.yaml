definitions:
  handler.CreateShortLinkRequest:
    properties:
      expire_after:
        description: например, "2h", "30m", "7d"
        type: string
      original_url:
        type: string
    required:
    - original_url
    type: object
  handler.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  handler.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handler.UserRegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Click:
    properties:
      clickedAt:
        type: string
      country:
        type: string
      id:
        type: string
      ip:
        type: string
      region:
        type: string
      shortLink:
        $ref: '#/definitions/models.ShortLink'
      shortLinkID:
        type: string
      userAgent:
        type: string
    type: object
  models.ShortLink:
    properties:
      clicks:
        items:
          $ref: '#/definitions/models.Click'
        type: array
      createdAt:
        type: string
      expireAt:
        type: string
      id:
        type: string
      isActive:
        type: boolean
      originalURL:
        type: string
      shortCode:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userID:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      passwordHash:
        type: string
      shortLinks:
        items:
          $ref: '#/definitions/models.ShortLink'
        type: array
    type: object
  response.DetailedLinkStats:
    description: Подробная статистика по короткой ссылке
    properties:
      countries:
        items:
          type: string
        type: array
      countries_count:
        type: integer
      countries_stats:
        additionalProperties:
          format: int64
          type: integer
        type: object
      daily_stats:
        additionalProperties:
          format: int64
          type: integer
        type: object
      total:
        type: integer
      unique_ip_count:
        type: integer
      unique_ips:
        items:
          type: string
        type: array
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  response.LinkStatsResponse:
    properties:
      stats:
        $ref: '#/definitions/response.DetailedLinkStats'
    type: object
  response.ShortLinkListResponse:
    properties:
      links:
        items:
          $ref: '#/definitions/response.SuccessShortLinkResponse'
        type: array
    type: object
  response.SuccessShortLinkResponse:
    properties:
      expire_at:
        type: string
      id:
        type: string
      original_url:
        type: string
      short_url:
        type: string
    type: object
  response.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.UserRegisterResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  title: TZ_OZON API
  version: "1.0"
paths:
  /{shortCode}:
    get:
      consumes:
      - application/json
      description: Перенаправление на оригинальный URL по shortCode
      parameters:
      - description: shortCode
        in: path
        name: shortCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Успешное получение оригинального URL
          schema:
            type: string
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Короткая ссылка не найдена или неактивна/истекла
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Перенаправление
      tags:
      - links
  /auth/login:
    post:
      consumes:
      - application/json
      description: Вход существующего пользователя
      parameters:
      - description: Параметры входа пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход пользователя
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Неверный пароль
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Вход пользователя
      tags:
      - users
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Обновление refresh-токена
      parameters:
      - description: Параметры обновления токена
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление токена
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Неверный токен
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновление токена
      tags:
      - users
  /auth/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя
      parameters:
      - description: Параметры регистрации пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Успешная регистрация пользователя
          schema:
            $ref: '#/definitions/response.UserRegisterResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Пользователь уже существует
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - users
  /links:
    get:
      consumes:
      - application/json
      description: Получить короткие ссылки пользователя
      produces:
      - application/json
      responses:
        "200":
          description: Успешное получение коротких ссылок
          schema:
            $ref: '#/definitions/response.ShortLinkListResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка получения коротких ссылок
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить короткие ссылки пользователя
      tags:
      - links
  /links/{id}:
    delete:
      consumes:
      - application/json
      description: Деактивация (soft delete) короткой ссылки
      parameters:
      - description: ID короткой ссылки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ссылка деактивирована
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Ссылка не найдена или не принадлежит пользователю
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка деактивации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Деактивация (soft delete) короткой ссылки
      tags:
      - links
  /links/{id}/clicks:
    get:
      consumes:
      - application/json
      description: Возвращает список всех кликов по ссылке, отсортированных по дате
        (новые сверху)
      parameters:
      - description: ID короткой ссылки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список кликов
          schema:
            items:
              $ref: '#/definitions/models.Click'
            type: array
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Нет доступа
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Ссылка не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить все клики по короткой ссылке
      tags:
      - links
  /links/{id}/stats:
    get:
      consumes:
      - application/json
      description: 'Получить статистику: количество переходов, уникальные IP, география,
        график по дням'
      parameters:
      - description: ID короткой ссылки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Статистика по ссылке
          schema:
            $ref: '#/definitions/response.LinkStatsResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Ссылка не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Статистика по короткой ссылке
      tags:
      - links
  /links/create:
    post:
      consumes:
      - application/json
      description: Создание короткой ссылки
      parameters:
      - description: CreateShortLinkRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateShortLinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание короткой ссылки
          schema:
            $ref: '#/definitions/response.SuccessShortLinkResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка создания короткой ссылки
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Создание короткой ссылки
      tags:
      - links
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
